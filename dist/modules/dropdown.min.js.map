{"version":3,"sources":["modules/dropdown.js"],"names":["angular","trigger","provider","container","this","defaults","keyboard","html","delay","placement","bodyEl","matchesSelector","DropdownFactory","$dropdown","options","$get","inlineTemplate","$window","$rootScope","$tooltip","$timeout","evt","target","element","directive","getTarget","parent","extend","config","$onKeyDown","keyCode","stopPropagation","items","index","forEach","preventDefault","focus","length","show","el","i","on","hide","dropdownElement","$element","off","$isShown","destroy","onBodyClick","scope","document","body","Element","prototype","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","nextSibling","tElement","restrict","compile","templateUrl","parentNode","removeChild","nodeType","outerHTML","tAttrs","isDefined","key","falseValueRegExp","bsKey","charAt","toUpperCase","slice","attr","test","content","newValue","dropdown","bsShow","$eval","$watch","isString","oldValue","match","$on"],"mappings":"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","file":"modules/dropdown.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$dropdown', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'dropdown',\n      prefixEvent: 'dropdown',\n      placement: 'bottom-left',\n      templateUrl: 'dropdown/dropdown.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0\n    };\n\n    this.$get = function ($window, $rootScope, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\n\n      function DropdownFactory (element, config) {\n\n        var $dropdown = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        /* var scope = */$dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        if (options.inlineTemplate === true) {\n          options.inlineTemplate = '.dropdown-menu';\n        }\n        if (options.inlineTemplate && !options.target) {\n          options.target = element.parent();\n        }\n\n        $dropdown = $tooltip(element, options);\n\n        // Protected methods\n\n        $dropdown.$onKeyDown = function (evt) {\n          if (!/(38|40)/.test(evt.keyCode)) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // Retrieve focused index\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\n          if (!items.length) return;\n          var index;\n          angular.forEach(items, function (el, i) {\n            if (matchesSelector && matchesSelector.call(el, ':focus')) index = i;\n          });\n\n          // Navigate with keyboard\n          if (evt.keyCode === 38 && index > 0) index--;\n          else if (evt.keyCode === 40 && index < items.length - 1) index++;\n          else if (angular.isUndefined(index)) index = 0;\n          items.eq(index)[0].focus();\n\n        };\n\n        // Overrides\n\n        var show = $dropdown.show;\n        $dropdown.show = function () {\n          var target = getTarget();\n          if (target.hasClass('dropdown') || target.hasClass('dropup')) target.addClass('open');\n          show();\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            if (options.keyboard && $dropdown.$element) $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\n            bodyEl.on('click', onBodyClick);\n          }, 0, false);\n        };\n\n        var hide = $dropdown.hide;\n        $dropdown.hide = function () {\n          var dropdownElement = $dropdown.$element;\n          if (!$dropdown.$isShown) return;\n          hide();\n          if ($dropdown.$isShown) return; // support preventing hide\n          if (options.keyboard && dropdownElement) dropdownElement.off('keydown', $dropdown.$onKeyDown);\n          bodyEl.off('click', onBodyClick);\n          var target = getTarget();\n          if (target.hasClass('dropdown') || target.hasClass('dropup')) target.removeClass('open');\n        };\n\n        var destroy = $dropdown.destroy;\n        $dropdown.destroy = function () {\n          bodyEl.off('click', onBodyClick);\n          destroy();\n        };\n\n        // Private functions\n\n        function onBodyClick (evt) {\n          if (evt.target === element[0]) return;\n          return evt.target !== element[0] && $dropdown.hide();\n        }\n\n        function getTarget() {\n          return options.target || element.parent();\n        }\n\n        return $dropdown;\n\n      }\n\n      return DropdownFactory;\n\n    };\n\n  })\n\n  .directive('bsDropdown', function ($window, $sce, $dropdown) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      compile: function (tElement, tAttrs) {\n\n        // Directive options\n        var options = {};\n\n        // Support for inlined template (next sibling)\n        // It must be fetched before compilation\n        if (!tAttrs.bsDropdown) {\n          var nextSibling = tElement[0].nextSibling;\n          while (nextSibling && nextSibling.nodeType !== 1) {\n            nextSibling = nextSibling.nextSibling;\n          }\n          if (nextSibling && nextSibling.className.split(' ').indexOf('dropdown-menu') >= 0) {\n            options.template = nextSibling.outerHTML;\n            options.templateUrl = undefined;\n            nextSibling.parentNode.removeChild(nextSibling);\n          }\n        }\n\n        return function postLink (scope, element, attr) {\n\n          // Directive options\n          options.scope = scope;\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'target', 'trigger', 'keyboard', 'html', 'animation', 'id', 'autoClose', 'inlineTemplate'], function (key) {\n            if (angular.isDefined(tAttrs[key])) options[key] = tAttrs[key];\n          });\n\n          // use string regex match boolean attr falsy values, leave truthy values be\n          var falseValueRegExp = /^(false|0|)$/i;\n          angular.forEach(['html', 'container'], function (key) {\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n          });\n\n          // bind functions from the attrs to the show and hide events\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n            if (angular.isDefined(attr[bsKey])) {\n              options[key] = scope.$eval(attr[bsKey]);\n            }\n          });\n\n          // Support scope as an object\n          scope.$watch(attr.bsDropdown, function (newValue, oldValue) {\n            scope.content = newValue;\n          }, true);\n\n          // Initialize dropdown\n          var dropdown = $dropdown(element, options);\n\n          // Visibility binding support\n          if (attr.bsShow) {\n            scope.$watch(attr.bsShow, function (newValue, oldValue) {\n              if (!dropdown || !angular.isDefined(newValue)) return;\n              if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(dropdown),?/i);\n              if (newValue === true) {\n                dropdown.show();\n              } else {\n                dropdown.hide();\n              }\n            });\n          }\n\n          // Garbage collection\n          scope.$on('$destroy', function () {\n            if (dropdown) dropdown.destroy();\n            options = null;\n            dropdown = null;\n          });\n\n        };\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}