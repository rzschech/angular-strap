{"version":3,"sources":["modules/modal.js"],"names":["angular","template","provider","contentTemplate","defaults","container","element","backdrop","keyboard","html","show","this","$get","forEach","trim","requestAnimationFrame","bodyElement","htmlReplaceRegExp","$modal","ModalFactory","config","enterAnimateCallback","scope","version","minor","toggle","$isShown","removeClass","options","prefixClass","focus","modalElement","unbindBackdropEvents","off","hideOnBackdropClick","backdropElement","preventEventDefault","bindKeyboardEvents","on","$onKeyUp","evt","destroyModalElement","modalScope","$destroy","$element","$options","extend","key","trustAsHtml","$scope","$new","$rootScope","$hide","$$postDigest","$id","id","attr","$show","$sce","hide","$promise","templateEl","fetchTemplate","outerHTML","then","modalLinker","position","css","right","z-index","top","left","init","data","replace","$compile","destroy","after","isElement","parent","$emit","display","placement","animation","clonedElement","prefixEvent","defaultPrevented","addClass","$animate","el","enter","safeDigest","bindBackdropEvents","leave","leaveAnimateCallback","unbindKeyboardEvents","which","fetchPromises","cache","$templateCache","res","$http","get","directive","restrict","body","link","isDefined","falseValueRegExp","$observe","newValue","oldValue","bsModal","$watch","content","modal","trigger","$on"],"mappings":"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","file":"modules/modal.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.modal', ['mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$modal', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      template: 'modal/modal.tpl.html',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true\n    };\n\n    this.$get = function($window, $rootScope, $compile, $q, $templateCache, $http, $animate, $timeout, $sce, dimensions) {\n\n      var forEach = angular.forEach;\n      var trim = String.prototype.trim;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n      var htmlReplaceRegExp = /ng-bind=\"/ig;\n\n      function ModalFactory(config) {\n\n        var $modal = {};\n\n        // Common vars\n        var options = $modal.$options = angular.extend({}, defaults, config);\n        $modal.$promise = fetchTemplate(options.template);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n        if(!options.element && !options.container) {\n          options.container = 'body';\n        }\n\n        // store $id to identify the triggering element in events\n        // give priority to options.id, otherwise, try to use\n        // element id if defined\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\n\n        // Support scope as string options\n        forEach(['title', 'content'], function(key) {\n          if(options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n\n        // Provide scope helpers\n        scope.$hide = function() {\n          scope.$$postDigest(function() {\n            $modal.hide();\n          });\n        };\n        scope.$show = function() {\n          scope.$$postDigest(function() {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function() {\n          scope.$$postDigest(function() {\n            $modal.toggle();\n          });\n        };\n        // Publish isShown as a protected var on scope\n        $modal.$isShown = scope.$isShown = false;\n\n        // Support contentTemplate option\n        if(options.contentTemplate) {\n          $modal.$promise = $modal.$promise.then(function(template) {\n            var templateEl = angular.element(template);\n            return fetchTemplate(options.contentTemplate)\n            .then(function(contentTemplate) {\n              var contentEl = findElement('[ng-bind=\"content\"]', templateEl[0]).removeAttr('ng-bind').html(contentTemplate);\n              // Drop the default footer as you probably don't want it if you use a custom contentTemplate\n              if(!config.template) contentEl.next().remove();\n              return templateEl[0].outerHTML;\n            });\n          });\n        }\n\n        // Fetch, compile then initialize modal\n        var modalLinker, modalElement, modalScope;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        backdropElement.css({position:'fixed', top:'0px', left:'0px', bottom:'0px', right:'0px', 'z-index': 1038});\n        $modal.$promise.then(function(template) {\n          if(angular.isObject(template)) template = template.data;\n          if(options.html) template = template.replace(htmlReplaceRegExp, 'ng-bind-html=\"');\n          template = trim.apply(template);\n          modalLinker = $compile(template);\n          $modal.init();\n        });\n\n        $modal.init = function() {\n\n          // Options: show\n          if(options.show) {\n            scope.$$postDigest(function() {\n              $modal.show();\n            });\n          }\n\n        };\n\n        $modal.destroy = function() {\n\n          // Remove element\n          destroyModalElement();\n\n          // remove backdrop element\n          if(backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n\n          // Destroy scope\n          scope.$destroy();\n        };\n\n        $modal.show = function() {\n          if($modal.$isShown) return;\n\n          var parent, after;\n          if(angular.isElement(options.container)) {\n            parent = options.container;\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\n          } else {\n            if (options.container) {\n              parent = findElement(options.container);\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\n            } else {\n              parent = null;\n              after = options.element;\n            }\n          }\n\n          // destroy any existing modal elements\n          if(modalElement) destroyModalElement();\n\n          // create a new scope, so we can destroy it and all child scopes\n          // when destroying the modal element\n          modalScope = $modal.$scope.$new();\n          // Fetch a cloned element linked from template\n          modalElement = $modal.$element = modalLinker(modalScope, function(clonedElement, scope) {});\n\n          if(scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\n            return;\n          }\n\n          // Set the initial positioning.\n          modalElement.css({display: 'block'}).addClass(options.placement);\n\n          // Options: animation\n          if(options.animation) {\n            if(options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n          else {\n            backdropElement.addClass('in');\n          }\n\n          if(options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null);\n          }\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if(angular.version.minor <= 2) {\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\n          }\n\n          $modal.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n          // Focus once the enter-animation has started\n          // Weird PhantomJS bug hack\n          var el = modalElement[0];\n          requestAnimationFrame(function() {\n            el.focus();\n          });\n\n          bodyElement.addClass(options.prefixClass + '-open');\n          if(options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n\n          // Bind events\n          bindBackdropEvents();\n          bindKeyboardEvents();\n        };\n\n        function enterAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.show', $modal);\n        }\n\n        $modal.hide = function() {\n          if(!$modal.$isShown) return;\n\n          if(scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\n            return;\n          }\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if(angular.version.minor <= 2) {\n            $animate.leave(modalElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(modalElement).then(leaveAnimateCallback);\n          }\n\n          if(options.backdrop) {\n            $animate.leave(backdropElement);\n          }\n          $modal.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n\n          // Unbind events\n          unbindBackdropEvents();\n          unbindKeyboardEvents();\n        };\n\n        function leaveAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.hide', $modal);\n          bodyElement.removeClass(options.prefixClass + '-open');\n          if(options.animation) {\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n          }\n        }\n\n        $modal.toggle = function() {\n\n          $modal.$isShown ? $modal.hide() : $modal.show();\n\n        };\n\n        $modal.focus = function() {\n          modalElement[0].focus();\n        };\n\n        // Protected methods\n\n        $modal.$onKeyUp = function(evt) {\n\n          if (evt.which === 27 && $modal.$isShown) {\n            $modal.hide();\n            evt.stopPropagation();\n          }\n\n        };\n\n        function bindBackdropEvents() {\n          if(options.backdrop) {\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n            backdropElement.on('wheel', preventEventDefault);\n          }\n        }\n\n        function unbindBackdropEvents() {\n          if(options.backdrop) {\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n            backdropElement.off('wheel', preventEventDefault);\n          }\n        }\n\n        function bindKeyboardEvents() {\n          if(options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n          }\n        }\n\n        function unbindKeyboardEvents() {\n          if(options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n          }\n        }\n\n        // Private methods\n\n        function hideOnBackdropClick(evt) {\n          if(evt.target !== evt.currentTarget) return;\n          options.backdrop === 'static' ? $modal.focus() : $modal.hide();\n        }\n\n        function preventEventDefault(evt) {\n          evt.preventDefault();\n        }\n\n        function destroyModalElement() {\n          if($modal.$isShown && modalElement !== null) {\n            // un-bind events\n            unbindBackdropEvents();\n            unbindKeyboardEvents();\n          }\n\n          if(modalScope) {\n            modalScope.$destroy();\n            modalScope = null;\n          }\n\n          if(modalElement) {\n            modalElement.remove();\n            modalElement = $modal.$element = null;\n          }\n        }\n\n        return $modal;\n\n      }\n\n      // Helper functions\n\n      function safeDigest(scope) {\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n      }\n\n      function findElement(query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      var fetchPromises = {};\n      function fetchTemplate(template) {\n        if(fetchPromises[template]) return fetchPromises[template];\n        return (fetchPromises[template] = $http.get(template, {cache: $templateCache}).then(function(res) {\n          return res.data;\n        }));\n      }\n\n      return ModalFactory;\n\n    };\n\n  })\n\n  .directive('bsModal', function($window, $sce, $modal) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'id', 'prefixEvent', 'prefixClass'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['backdrop', 'keyboard', 'html', 'container'], function(key) {\n          if(angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key]))\n            options[key] = false;\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function(key) {\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n          });\n        });\n\n        // Support scope as an object\n        attr.bsModal && scope.$watch(attr.bsModal, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.content = newValue;\n          }\n        }, true);\n\n        // Initialize modal\n        var modal = $modal(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', modal.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (modal) modal.destroy();\n          options = null;\n          modal = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}